Language specific content bundles

Localization

Thanks to Makara, kraken has the ability to load content bundles on the fly, based on the request context.
 If we wanted to greet a user in their native language (e.g.: Spanish), we can simply add this context to the response
  before rendering the template:


res.locals.locale = { language: 'es', country: 'ES' };

var model = { name: 'Antonio Banderas' };
res.render('index',model);


We would also change our template as follows, using a @pre type="content" tag:

<h1>{@pre type="content" key="index.greeting"/}</h1>

This instructs the framework to pick up the index.greeting string from one of the locale content bundles.

The locales directory holds these bundles, organized by country and language. The bundles are nothing more than simple
 key=value .property files. If our sample application caters to English and Spanish speakers, we would create two bundles:

locales/US/en/index.properties to hold index.greeting=Hello {name}!

and

locales/ES/es/index.properties to hold index.greeting=Hola {name}!

So, in the above example, since the language and country are set to es and ES respectively,
the framework would pick the second bundle and display:

Hola Antonio Banderas!
